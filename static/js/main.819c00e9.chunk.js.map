{"version":3,"sources":["Cell.js","Board.js","App.js","index.js"],"names":["Cell","handleClick","evt","props","flipCellsAroundMe","classes","this","isLit","className","onClick","Component","Board","renderBoard","state","board","map","tr","y","lit","x","coord","flipCellsAround","hasWon","allLightsOn","createBoard","i","nrows","row","j","ncols","rand","Math","random","chanceLightsOn","push","split","Number","flipCell","every","r","c","setState","renderWinMsg","renderLightsOn","defaultProps","App","ReactDOM","render","document","getElementById"],"mappings":"sRAgBeA,G,kNAXbC,YAAc,SAACC,GACb,EAAKC,MAAMC,qB,uDAGX,IAAIC,EAAU,QAAUC,KAAKH,MAAMI,MAAQ,YAAc,IACzD,OACE,oBAAIC,UAAWH,EAASI,QAASH,KAAKL,kB,GAPzBS,cCCbC,G,wDAEJ,WAAYR,GAAQ,IAAD,8BACjB,cAAMA,IA4CRS,YAAc,WACZ,OACE,uBAAOJ,UAAU,cAAjB,SACE,gCACG,EAAKK,MAAMC,MAAMC,KAAI,SAACC,EAAIC,GACzB,OACE,6BAAaD,EAAGD,KAAI,SAACG,EAAKC,GACxB,IAAIC,EAAK,UAAMH,EAAN,YAAWE,GACpB,OAAO,cAAC,EAAD,CAAkBZ,MAAOW,EAAKd,kBAAmB,EAAKiB,gBAAgBD,IAA3DA,OAFXH,WAjDnB,EAAKJ,MAAQ,CAAES,QAAQ,EAAOC,aAAa,EAAOT,MAAO,EAAKU,eAF7C,E,0DAQjB,IADA,IAAMV,EAAQ,GACLW,EAAI,EAAGA,EAAInB,KAAKH,MAAMuB,MAAOD,IAAK,CAEzC,IADA,IAAIE,EAAM,GACDC,EAAI,EAAGA,EAAItB,KAAKH,MAAM0B,MAAOD,IAAK,CACzC,IAAIE,EAAOC,KAAKC,SAAW1B,KAAKH,MAAM8B,eAAiB,EAAI,EAC3DN,EAAIO,KAAKJ,GAEXhB,EAAMoB,KAAKP,GAEb,OAAOb,I,sCAGOM,GAAQ,IAAD,SACEd,KAAKH,MAAtB0B,EADe,EACfA,MAAOH,EADQ,EACRA,MACTZ,EAAQR,KAAKO,MAAMC,MAFF,EAGRM,EAAMe,MAAM,KAAKpB,IAAIqB,QAHb,mBAGhBnB,EAHgB,KAGbE,EAHa,KAIrB,OAAO,WAEL,SAASkB,EAASpB,EAAGE,GACfA,GAAK,GAAKA,EAAIU,GAASZ,GAAK,GAAKA,EAAIS,IACvCZ,EAAMG,GAAGE,GAAsB,IAAhBL,EAAMG,GAAGE,GAAY,EAAI,GAI5CkB,EAASpB,EAAGE,GACZkB,EAASpB,EAAGE,EAAI,GAChBkB,EAASpB,EAAGE,EAAI,GAChBkB,EAASpB,EAAI,EAAGE,GAChBkB,EAASpB,EAAI,EAAGE,GAGhB,IAAIG,EAASR,EAAMwB,OAAM,SAAAC,GAAC,OAAIA,EAAED,OAAM,SAAAE,GAAC,OAAU,IAANA,QACvCjB,EAAcT,EAAMwB,OAAM,SAAAC,GAAC,OAAIA,EAAED,OAAM,SAAAE,GAAC,OAAU,IAANA,QAChD,EAAKC,SAAS,CAAEnB,SAAQC,cAAaT,a,qCAyBvC,OACE,sBAAKN,UAAU,sBAAf,UACE,sBAAMA,UAAU,cAAhB,wBACA,sBAAMA,UAAU,YAAhB,4B,uCAKJ,OACE,sBAAKA,UAAU,sBAAf,UACE,sBAAMA,UAAU,cAAhB,wBACA,sBAAMA,UAAU,YAAhB,mD,+BAKI,IAAD,EACyBF,KAAKO,MAA7BS,EADD,EACCA,OAAQC,EADT,EACSA,YAChB,OACE,sBAAKf,UAAU,QAAf,UACE,sBAAKA,UAAU,cAAf,UACE,sBAAMA,UAAS,uBAAkBe,GAAeD,IAAW,UAA3D,oBACA,sBAAMd,UAAS,qBAAgBe,GAAeD,IAAW,UAAzD,oBAEDhB,KAAKM,cACHN,KAAKO,MAAMS,OAAUhB,KAAKoC,eAAiB,KAC3CpC,KAAKO,MAAMU,YAAejB,KAAKqC,iBAAmB,Y,GA7FzCjC,cAAdC,EACGiC,aAAe,CAAElB,MAAO,EAAGG,MAAO,EAAGI,eAAgB,IAkG/CtB,QCzFAkC,G,6KARX,OACE,qBAAKrC,UAAU,MAAf,SACE,cAAC,EAAD,U,GAJUE,cCDlBoC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.819c00e9.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport \"./Cell.css\"\n\n\nclass Cell extends Component {\n  handleClick = (evt) => {\n    this.props.flipCellsAroundMe();\n  }\n  render() {\n    let classes = \"Cell\" + (this.props.isLit ? \" Cell-lit\" : \"\");\n    return (\n      <td className={classes} onClick={this.handleClick} />\n    )\n  }\n}\n\nexport default Cell","import React, { Component } from \"react\";\nimport Cell from \"./Cell\";\nimport './Board.css';\n\n\nclass Board extends Component {\n  static defaultProps = { nrows: 3, ncols: 6, chanceLightsOn: 0.3 }\n  constructor(props) {\n    super(props);\n    this.state = { hasWon: false, allLightsOn: false, board: this.createBoard() }\n  }\n\n\n  createBoard() {\n    const board = [];\n    for (let i = 0; i < this.props.nrows; i++) {\n      let row = []\n      for (let j = 0; j < this.props.ncols; j++) {\n        let rand = Math.random() < this.props.chanceLightsOn ? 0 : 1;\n        row.push(rand)\n      }\n      board.push(row)\n    }\n    return board\n  }\n\n  flipCellsAround(coord) {\n    let { ncols, nrows } = this.props;\n    let board = this.state.board;\n    let [y, x] = coord.split(\"-\").map(Number);\n    return () => {\n      // if this coord is actually on board, flip it\n      function flipCell(y, x) {\n        if (x >= 0 && x < ncols && y >= 0 && y < nrows) {\n          board[y][x] = (board[y][x] === 0) ? 1 : 0;\n\n        }\n      }\n      flipCell(y, x)\n      flipCell(y, x - 1)\n      flipCell(y, x + 1)\n      flipCell(y - 1, x)\n      flipCell(y + 1, x)\n\n      // win when every cell is turned off\n      let hasWon = board.every(r => r.every(c => c === 0))\n      let allLightsOn = board.every(r => r.every(c => c === 1))\n      this.setState({ hasWon, allLightsOn, board })\n    }\n  }\n\n\n  renderBoard = () => {\n    return (\n      <table className=\"Board-table\">\n        <tbody>\n          {this.state.board.map((tr, y) => {\n            return (\n              <tr key={y}>{tr.map((lit, x) => {\n                let coord = `${y}-${x}`\n                return <Cell key={coord} isLit={lit} flipCellsAroundMe={this.flipCellsAround(coord)} />\n              })}\n              </tr>\n            )\n          })\n          }\n        </tbody>\n      </table>\n    )\n  }\n\n  renderWinMsg() {\n    return (\n      <div className=\"Board-title win-msg\">\n        <span className=\"neon-orange\">Congrats, </span>\n        <span className=\"neon-blue\"> you won!</span>\n      </div >\n    )\n  }\n  renderLightsOn() {\n    return (\n      <div className=\"Board-title win-msg\">\n        <span className=\"neon-orange\">Great, but</span>\n        <span className=\"neon-blue\"> you should turn off the lights!</span>\n      </div >\n    )\n  }\n\n  render() {\n    const { hasWon, allLightsOn } = this.state;\n    return (\n      <div className=\"Board\">\n        <div className=\"Board-title\">\n          <span className={`neon-orange ${(allLightsOn || hasWon) && 'dimmed'}`}>Lights</span>\n          <span className={`neon-blue ${(allLightsOn || hasWon) && 'dimmed'}`}>Out</span>\n        </div>\n        {this.renderBoard()}\n        { (this.state.hasWon) ? this.renderWinMsg() : null}\n        { (this.state.allLightsOn) ? this.renderLightsOn() : null}\n      </div >)\n  }\n}\n\n\nexport default Board;\n","import React, { Component } from \"react\";\nimport Board from \"./Board\";\nimport \"./App.css\";\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <Board />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}